name: Laravel CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

##### Jobs : Build, Test and Deploy #####
jobs:

  # Laravel Build and Test
  laravel-build:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.2
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: democicdlaravel
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up PHP
    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: mbstring, bcmath, mysqli
        ini-values: post_max_size=256M, max_execution_time=180
        coverage: none

    # Step 3: Install Composer dependencies
    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction

    # Step 4: Set up Laravel environment
    - name: Set environment
      run: cp .env.example .env

    # Step 5: Generate application key
    - name: Generate app key
      run: php artisan key:generate

    # Step 6: Verify Database Connectivity
    - name: Test database connection
      run: |
        mysql -h 127.0.0.1 -u root -proot -e "SHOW DATABASES;"

    # Step 7: Run Laravel tests
    - name: Run Laravel tests
      run: php artisan test

    # Step 8: Run migrations
    - name: Run migrations
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: democicdlaravel
        DB_USERNAME: root
        DB_PASSWORD: root
      run: php artisan migrate --force

    # Step 9: Optimize Laravel application
    - name: Cache Laravel settings
      run: |
        php artisan route:cache
        php artisan config:cache
        php artisan view:cache

    # Step 10: Upload production-ready public files (Optional)
    # Only needed if you're generating static assets or any other public files.
    - name: Check public directory contents
      run: ls -al ./public

    - name: Upload production-ready public files
      uses: actions/upload-artifact@v3
      with:
        name: production-files
        path: ./public

  # Laravel Deploy
  laravel-deploy:
    name: Deploy
    needs: laravel-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Download artifact
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: production-files
          path: ./public

      # Step 3: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.TOKEN }}
          publish_dir: ./public

          
